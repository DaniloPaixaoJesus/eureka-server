version: '2'
services:
    redis:
        image: 'redis:4-alpine'
        hostname: redis
        container_name: redis
        environment:
        # ALLOW_EMPTY_PASSWORD is recommended only for development.
        - ALLOW_EMPTY_PASSWORD=yes
        - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        ports:
        - '6379:6379'
        volumes:
        - 'redis_data:/bitnami/redis/data'
        networks:
        - microservice-network

    # redis:
    #     image: 'redis:4-alpine'
    #     # command: redis-server --requirepass 123456
    #     entrypoint: redis-server --appendonly yes
    #     container_name: redis
    #     ports:
    #     - 6379:6379
    #     networks:
    #         - microservice-network

    rabbitmq:
        hostname: rabbitmq
        build:
            context: .
            dockerfile: rabbitmq.Dockerfile
        environment:
            RABBITMQ_DEFAULT_USER: "swedqmq"
            RABBITMQ_DEFAULT_PASS: "swedqmq"
        ports:
        - 15672:15672
        - 5672:5672
        networks:
            - microservice-network

    eureka-server:
        build:
            dockerfile: ./microservice-eureka-server/eureka.server.dockerfile
            context: .
        environment:
            - EUREKA_PORT=8761
        container_name: eureka-server
        ports:
            - 8761:8761
        networks:
            - microservice-network

    vehicle-track:
        build:
            dockerfile: ./vehicle-track-microservice-eureka-client/vehicle.track.dockerfile
            context: .
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - RABBIT_MQ_USER=swedqmq
            - RABBIT_MQ_PASSWORD=swedqmq
            - RABBIT_MQ_HOST=rabbitmq
            - RABBIT_MQ_PORT=5672
            - EUREKA_SERVER=eureka-server
            - EUREKA_PORT=8761
        container_name: vehicle-track
        ports:
            - 8084:8084
        depends_on: 
            - eureka-server
            - redis
            - rabbitmq
        links:
            - "redis"
            - "rabbitmq"
        networks:
            - microservice-network

    driver-service:
        build:
            dockerfile: ./driver-microservice-eureka-client/driver.service.dockerfile
            context: .
        environment:
            - POSTGRES_HOST=postgres
            - EUREKA_SERVER=eureka-server
            - EUREKA_PORT=8761
        container_name: driver-service
        ports:
            - 8082:8082
        depends_on: 
            - "eureka-server"
        links:
            - eureka-server
        networks:
            - microservice-network

    vehicle-service:
        build:
            dockerfile: ./vehicle-microservice-eureka-client/vehicle.service.dockerfile
            context: .
        environment:
            - POSTGRES_HOST=postgres
            - EUREKA_SERVER=eureka-server
            - EUREKA_PORT=8761
            - WEB_SOCKET_PROTOCOL=http
            - WEB_SOCKET_HOST=vehicle-websocket
            - WEB_SOCKET_PORT=8085
        container_name: vehicle-service
        ports:
            - 8083:8083
        depends_on: 
            - "eureka-server"
            - "driver-service"
            - "vehicle-track"
        links:
            - eureka-server
            - driver-service
            - vehicle-track
        networks:
            - microservice-network

    websocket-server:
        build:
            dockerfile: ./vehicle-websocket-eureka-client/websocket.dockerfile
            context: .
        environment:
            - WEBSOCKET_URL=ws://vehicle-websocket:8085/livestatus-websocket
            - EUREKA_SERVER=eureka-server
            - EUREKA_PORT=8761
        container_name: websocket-server
        ports:
            - 8085:8085
        depends_on: 
            - "eureka-server"
        links:
            - eureka-server
        networks:
            - microservice-network
volumes:
    redis_data:
        driver: local

networks: 
    microservice-network:
        driver: bridge
